<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>R6 Case</title>
        <link rel="stylesheet" type="text/css" href="/style.css">
        <link rel="icon" href="r6_pack.png" type="image/x-icon">
    </head>
    <body>

        <header>
            <!-- Barre de navigation (navbar) -->
            <div class="navbar">
                <a href="#">Home</a>
                <a href="#">Cases</a>
                <a href="#">About</a>
                <a href="#">Contact</a>
            </div>
        </header>
        
        <div class="pack-container-title">
            <h1>Tous nos Packs:</h1>
            <div class="pack-container">
                <% packs.forEach(function(pack) { %>
                    <div class="pack">
                        <a href="/pack/<%= pack.id %>">
                            <img class="img_pack" src="/image_pack/<%= pack.image %>" alt="Image du Pack">
                        </a>
                        <p class="name"><%= pack.name %></p>
                        <button class="case-button" onclick="openCase()">Open Case for <%= pack.price %>¤</button>
                    </div>
                <% }); %>
            </div>
        </div>


        <div class="video-container">
            <video autoplay muted loop id="video-background">
                <source src="mylivewallpapers.com-Rainbow-6-Siege.mp4" type="video/mp4">
                <!-- Ajoutez des sources supplémentaires pour la compatibilité avec différents navigateurs -->
                Votre navigateur ne prend pas en charge la balise vidéo.
            </video>
            <div class="gradient-overlay"></div>
            <div class="gradient-overlay2"></div>
        </div>

        <div class="cursor"></div>
        <div id="wheel-container">
        <div id="wheel">
            <div class="wheel-slice"><div style="background-color: rgb(255, 255, 140);"></div></div>
            <div class="wheel-slice"><div style="background-color: red;"></div></div>
            <div class="wheel-slice"><div style="background-color: rgb(255, 255, 140);"></div></div>
            <div class="wheel-slice"><div style="background-color: red;"></div></div>
            <div class="wheel-slice"><div style="background-color: rgb(255, 255, 140);"></div></div>
            <div class="wheel-slice"><div style="background-color: red;"></div></div>
            <div class="wheel-slice"><div style="background-color: rgb(255, 255, 140);"></div></div>
            <div class="wheel-slice"><div style="background-color: red;"></div></div>
            <div class="wheel-slice"><div style="background-color: rgb(255, 255, 140);"></div></div>
            <div class="wheel-slice"><div style="background-color: red;"></div></div>
            <div class="wheel-slice"><div style="background-color: rgb(255, 255, 140);"></div></div>
            <div class="wheel-slice"><div style="background-color: red;"></div></div>
            <div class="wheel-slice"><div style="background-color: rgb(255, 255, 140);"></div></div>
            <div class="wheel-slice"><div style="background-color: red;"></div></div>
            <div class="wheel-slice"><div style="background-color: rgb(255, 255, 140);"></div></div>
            <div class="wheel-slice"><div style="background-color: red;"></div></div>
            <div class="wheel-slice"><div style="background-color: rgb(255, 255, 140);"></div></div>
            <div class="wheel-slice"><div style="background-color: red;"></div></div>
            <div class="wheel-slice"><div style="background-color: rgb(255, 255, 140);"></div></div>
            <div class="wheel-slice"><div style="background-color: red;"></div></div>
            <div class="wheel-slice"><div style="background-color: rgb(255, 255, 140);"></div></div>
            <div class="wheel-slice"><div style="background-color: red;"></div></div>
            <div class="wheel-slice"><div style="background-color: rgb(255, 255, 140);"></div></div>
            <div class="wheel-slice"><div style="background-color: red;"></div></div>
            <div class="wheel-slice"><div style="background-color: rgb(255, 255, 140);"></div></div>
            <div class="wheel-slice"><div style="background-color: red;"></div></div>
            <div class="wheel-slice"><div style="background-color: rgb(255, 255, 140);"></div></div>
            <div class="wheel-slice"><div style="background-color: red;"></div></div>
            <div class="wheel-slice"><div style="background-color: rgb(255, 255, 140);"></div></div>
            <div class="wheel-slice"><div style="background-color: red;"></div></div>
        </div>
        </div>

    <script>

        function openCase() {
            
            // Exemple d'utilisation
            const dropRates = {
                "skin1": 0.01,
                "skin2": 0.15,
                "skin3": 0.10,
                "skin4": 0.74
                // Ajoute d'autres skins avec leurs pourcentages
            };
    
            const totalSkinsToGenerate = 100;
            const generatedSkins = generateSkinList(dropRates, totalSkinsToGenerate);
    
            console.log(generatedSkins);
            console.log(count_element(generatedSkins, "skin4"));

            const randomIndex = Math.floor(Math.random() * totalSkinsToGenerate);

            const resultContainer = document.getElementById('result');
            resultContainer.innerHTML = 'Congratulations! You got something awesome! U got ' + generatedSkins[randomIndex]; ;
        }

        function generateSkinList(dropRates, totalSkins) {
            // Initialisation de la liste des skins
            let skinList = [];

            // Calcul de la somme totale des pourcentages
            const totalPercentage = Object.values(dropRates).reduce((acc, rate) => acc + rate, 0);
            if (totalPercentage != 1){
                throw new Error("Pourcentage must be 100 percent");
            }

            // Calcul du nombre d'éléments à générer pour chaque skin ("skin4:74")
            const skinCounts = Object.fromEntries(Object.entries(dropRates).map(([skin, rate]) => [skin, Math.round((rate / totalPercentage) * totalSkins)]));

            // Correction du nombre d'éléments pour s'assurer que le total est exactement égal à totalSkins
            const diff = totalSkins - Object.values(skinCounts).reduce((acc, count) => acc + count, 0);
            if (diff !== 0) {
                // Ajouter ou retirer la différence à un skin (le premier trouvé)
                for (let skin in skinCounts) {
                    skinCounts[skin] += diff;
                    break;
                }
            }

            // Génération de la liste finale
            for (let skin in skinCounts) {
                for (let i = 0; i < skinCounts[skin]; i++) {
                    skinList.push(skin);
                }
            }

            // Mélanger la liste pour plus d'aléatoire
            skinList.sort(() => Math.random() - 0.5);

            return skinList;
        }

        
        function count_element(liste, element){
            
            count=0;
            for (let i in liste) {
                if (liste[i] == element){
                    count++;
                }
            }
            return count;
        }

        window.onload = function () {
      
            
        };

        const wheelContainer = document.getElementById('wheel-container');
        const wheel = document.getElementById('wheel');
        const slices = document.querySelectorAll('.wheel-slice'); // Correction de la classe ici
        const cursor = document.querySelector('.cursor');

        let startTime = null;

        function spinWheel(timestamp) {
            if (!startTime) {
            startTime = timestamp;
            }

            const progress = timestamp - startTime;

            // Défilement fluide
            wheel.style.transform = `translateX(-${progress / 5}px)`; // Ajustez la vitesse en modifiant le dénominateur

            // Positionne le curseur au milieu de la roue
            const middleIndex = Math.floor(slices.length / 2);
            const middleSlice = slices[middleIndex];
            const middlePosition = middleSlice.offsetLeft + middleSlice.offsetWidth / 2;
            cursor.style.left = `${wheelContainer.offsetLeft + middlePosition}px`;

            // Arrête le défilement après 5000 ms (5 secondes)
            if (progress < 5000) {
            requestAnimationFrame(spinWheel);
            }
        }

        window.onload = function () {
            requestAnimationFrame(spinWheel);
        };

    </script>
</html>